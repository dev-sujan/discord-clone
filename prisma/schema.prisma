// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id       String @id @default(uuid())
  userId   String @unique
  name     String
  imageUrl String @db.Text
  email    String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  servers  Server[]
  members  Member[]
  channels Channel[]
}

model Server {
  id         String @id @default(uuid())
  name       String
  imageUrl   String @db.Text
  inviteCode String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Profile   Profile? @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String?

  members  Member[]
  channels Channel[]

  @@index([profileId])
}

enum MemberRole {
  ADMIN
  MODARATOR
  GUEST
}

model Member {
  id   String     @id @default(uuid())
  role MemberRole @default(GUEST)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Profile   Profile? @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String?

  Server   Server? @relation(fields: [serverId], references: [id], onDelete: Cascade)
  serverId String?

  @@index([profileId])
  @@index([serverId])
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id   String      @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Profile   Profile? @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String?

  Server   Server? @relation(fields: [serverId], references: [id], onDelete: Cascade)
  serverId String?

  @@index([profileId])
  @@index([serverId])
}
